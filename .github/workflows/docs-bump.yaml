name: CI

# This setup assumes that you run the unit tests with code coverage in the same
# workflow that will also print the coverage report as comment to the pull request.
# Therefore, you need to trigger this workflow when a pull request is (re)opened or
# when new code is pushed to the branch of the pull request. In addition, you also
# need to trigger this workflow when new code is pushed to the main branch because
# we need to upload the code coverage results as artifact for the main branch as
# well since it will be the baseline code coverage.
#
# We do not want to trigger the workflow for pushes to *any* branch because this
# would trigger our jobs twice on pull requests (once from "push" event and once
# from "pull_request->synchronize")
on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - 'main'

jobs:
  checkout_repository:
    name: "Checkout repository"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  version_bump:
    name: "Version Bump"
    runs-on: ubuntu-latest
    needs: checkout_repository
    steps:
      - name: Version Bump
        run: |
          branchVersion=$(yq .BasicSetupCliVersion ./bsctl/static/resources/constants.yaml)
          mainVersion=$(curl -L https://raw.githubusercontent.com/mrlunchbox777/basic-setup/main/bsctl/static/resources/constants.yaml 2>/dev/null | yq .BasicSetupCliVersion)

          if [ -z "$mainVersion" ]; then
            echo "Failed to get latest version from github"
            exit 1
          fi

          if [ -z "$branchVersion" ]; then
            echo "Failed to get version from branch"
            exit 1
          fi

          if [ "$branchVersion" == "$mainVersion" ]; then
            echo "Branch version not updated"
            exit 1
          fi
